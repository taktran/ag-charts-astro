---
import { SimpleExampleRunner } from "./SimpleExampleRunner";
import { OpenStackblitzButton } from "./stackblitz/OpenStackblitzButton";
import { getInternalFramework } from "../utils/pages";
import {
  getEntryFileContents,
  getEntryFileName,
  getIsEnterprise,
} from "../utils/pages";

const { title, name, type, options } = Astro.props;

const exampleUrl = `./examples/${name}`;

// TODO: Get this from framework selector
const [_, framework, page] = Astro.url.pathname.split("/");

const importType = "packages";

// TODO: Create framework selector
const useFunctionalReact = false;
const useVue3 = false;
const useTypescript = false;

const internalFramework = getInternalFramework({
  framework,
  useFunctionalReact,
  useVue3,
  useTypescript,
});

const entryFile = await getEntryFileContents({
  page,
  exampleName: name,
  importType,
  framework,
  internalFramework,
});

const entryFileName = getEntryFileName({
  framework,
  internalFramework,
});

const isEnterprise = getIsEnterprise({
  framework,
  internalFramework,
  entryFile: entryFile!,
});
---

<div class="container">
  <div class="controls">
    <a href={exampleUrl} target="_blank">Open in New Tab</a>
    {
      framework === "react" && (
        <OpenStackblitzButton
          client:only
          title={title}
          entryFileName={entryFileName}
          entryFile={entryFile}
          isEnterprise={isEnterprise}
        />
      )
    }
  </div>

  <iframe src={exampleUrl}></iframe>
</div>

<style>
  .container {
    border: 1px solid gray;
    padding: 8px;
  }
  .controls {
    display: flex;
    gap: 1rem;
  }
  iframe {
    display: block;
    width: 100%;
    height: 500px;
    border: 0;
  }
</style>
