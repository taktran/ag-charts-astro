---
import { SimpleExampleRunner } from "./SimpleExampleRunner";
import { OpenStackblitzButton } from "../features/stackblitz/OpenStackblitzButton";
import { getInternalFramework } from "../utils/pages";
import { getIsEnterprise } from "../utils/pages";
import { getGeneratedContents } from "../features/examples-generator/examples-generator";

const { title, name, type, options } = Astro.props;
const exampleUrl = `./examples/${name}`;

// TODO: Get this from framework selector
const [_, framework, page] = Astro.url.pathname.split("/");

const importType = "packages";

// TODO: Create framework selector
const useFunctionalReact = false;
const useVue3 = false;
const useTypescript = false;

const internalFramework = getInternalFramework({
  framework,
  useFunctionalReact,
  useVue3,
  useTypescript,
});

const { files, entryFileName } = await getGeneratedContents({
  internalFramework,
  importType,
  page,
  exampleName: name,
});
const entryFile = files[entryFileName];

const isEnterprise = getIsEnterprise({
  framework,
  internalFramework,
  entryFile: entryFile!,
});
---

<div class="container">
  <div class="controls">
    <a href={exampleUrl} target="_blank">Open in New Tab</a>

    <OpenStackblitzButton
      client:only
      title={title}
      framework={framework}
      internalFramework={internalFramework}
      entryFileName={entryFileName}
      entryFile={entryFile}
      isEnterprise={isEnterprise}
    />
  </div>

  <iframe src={exampleUrl}></iframe>
</div>

<style>
  .container {
    border: 1px solid gray;
    padding: 8px;
  }
  .controls {
    display: flex;
    gap: 1rem;
  }
  iframe {
    display: block;
    width: 100%;
    height: 500px;
    border: 0;
  }
</style>
