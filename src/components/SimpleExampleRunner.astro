---
import { SimpleExampleRunner } from "./SimpleExampleRunner";
import { OpenStackblitzButton } from "../features/stackblitz/OpenStackblitzButton";
import { getInternalFramework } from "../utils/pages";
import { getGeneratedContents } from "../features/examples-generator/examplesGenerator";
import path from "node:path";

const { title, name, type, options } = Astro.props;

// TODO: Get this from framework selector
const [_, framework, pageName] = Astro.url.pathname.split("/");
// TODO: Create framework selector
const useFunctionalReact = false;
const useVue3 = false;
const useTypescript = false;

const internalFramework = getInternalFramework({
  framework,
  useFunctionalReact,
  useVue3,
  useTypescript,
});

const exampleUrl = path.join(
  "/",
  internalFramework,
  pageName,
  "examples",
  name
);

const importType = "packages";

const generatedContents = await getGeneratedContents({
  internalFramework,
  importType,
  pageName,
  exampleName: name,
});

const { files, entryFileName, isEnterprise } = generatedContents || {};
const entryFile = files && entryFileName && files[entryFileName];
---

{
  entryFile ? (
    <div class="container">
      <div class="controls">
        <a href={exampleUrl} target="_blank">
          Open in New Tab
        </a>

        <OpenStackblitzButton
          client:only
          title={title}
          framework={framework}
          internalFramework={internalFramework}
          entryFileName={entryFileName}
          entryFile={entryFile}
          isEnterprise={isEnterprise}
        />
      </div>

      <iframe src={exampleUrl} />
    </div>
  ) : (
    `No entryfile for ${exampleUrl}`
  )
}
<style>
  .container {
    border: 1px solid gray;
    padding: 8px;
  }
  .controls {
    display: flex;
    gap: 1rem;
  }
  iframe {
    display: block;
    width: 100%;
    height: 500px;
    border: 0;
  }
</style>
