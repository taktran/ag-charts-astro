---
const {
  modifiedTimeMs,
  isExecuting,
  options,
  styleFiles,
  scriptFiles,
  indexFragment,
  appLocation,
} = Astro.props;

import MetaData from "./lib/MetaData";
import ExampleStyle from "./lib/ExampleStyle";
import Styles from "./lib/Styles";
import Scripts from "./lib/Scripts";
import { getChartScriptPath } from "../../utils/pages";

import { getIsDev } from "../../utils/pages";

const isDev = getIsDev();

const getCacheBustingUrl = (url: string, timestamp: string) =>
  `${url}?t=${timestamp}`;

const chartScriptPath = getChartScriptPath(options.enterprise);
---

<html lang="en">
  <head>
    <MetaData
      isDev={isDev}
      title="JavaScript example"
      modifiedTimeMs={modifiedTimeMs}
      isExecuting={isExecuting}
      options={options}
    />
    <ExampleStyle />
    <Styles
      files={isDev
        ? styleFiles
            .filter(
              (file: string) =>
                !file.includes("style.css") && !file.includes("styles.css")
            )
            .map((file: string) => getCacheBustingUrl(file, modifiedTimeMs))
        : styleFiles}
    />
  </head>
  <body>
    <Fragment set:html={indexFragment} />

    <script
      is:inline
      define:vars={{
        appLocation,
      }}
    >
      window.__basePath = appLocation;
    </script>
    {chartScriptPath ? <script src={chartScriptPath} /> : ""}
    <Scripts baseUrl={appLocation} files={scriptFiles} />
    <Styles
      files={styleFiles.filter(
        (file: string) =>
          file.includes("style.css") || file.includes("styles.css")
      )}
    />
  </body>
</html>
